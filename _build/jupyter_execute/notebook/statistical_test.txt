#!/usr/bin/env python3
import numpy as np
import scipy.stats as stats
import pandas as pd
from itertools import combinations

np.random.seed(0)

def main():
    # ダミーデータの作成（3群: A, B, C）
    A = np.random.normal(loc=50, scale=10, size=30)
    B = np.random.normal(loc=55, scale=10, size=30)
    C = np.random.normal(loc=60, scale=10, size=30)

    # すべての組み合わせ（AB, BC, CA）でt検定
    groups = {'A': A, 'B': B, 'C': C}
    pairs = list(combinations(groups.keys(), 2))  # ('A', 'B'), ('A', 'C'), ('B', 'C')

    # 有意水準
    alpha = 0.05
    n_tests = len(pairs)  # 検定回数
    alpha_corrected = alpha / n_tests  # ボンフェローニ補正後の有意水準

    # 検定の実施
    results = []
    for g1, g2 in pairs:
        t_stat, p_value = stats.ttest_ind(groups[g1], groups[g2])
        significant = p_value < alpha_corrected
        results.append((g1, g2, p_value, significant))

    df_results = pd.DataFrame(results, columns=["Group 1", "Group 2", "p-value", "Significant (Bonferroni)"])
    print(df_results.to_string(index=False))

if __name__ == "__main__":
    main()
